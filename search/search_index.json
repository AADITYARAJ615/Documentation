{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Need some help with the components? Just looking around? Either way, the following docs will surely help you understand Makeroid better! For further help, please visit the Makeroid Community . Getting Started With the Documentation Start by Choosing a Category Main Categories Components User Interface Layout Media Drawing and Animation Sensors Social Storage Connectivity Google LEGO Mindstorms Monetization Device Experimental Blocks Control Logic Math Text Lists Colors Variables Procedures Screen Any Component Testing Live Development Via WiFi Via USB Other Extensions Create Extensions Resources Create Extensions Release Notes Backpack Donate Makeroid Makeroid allows you to create Android apps easily with a blocks-type editor. No coding skills required. With the Material Design UI, your apps will stand out. We always listen to our users' opinions from our community (your suggestions, bug reports etc.). Useful Links Makeroid Builder This is the page you're going to use to build apps. This is main app that allows you to create anything you want with a Material Design UI. Makeroid Community Using the community, you can get help related to your questions about Makeroid. Even submit your ideas to help improve Makeroid or even report bugs you've experienced during your app development session. Community has so many users that help you, this means you will get a proper answer to any question of yours in minutes. Makeroid Status Page Using the Status Page you can check which services' of Makeroid is working or in Maintenance. If you cannot use a service of Makeroid, you can check using this page if the problem is related to your local internet or the Makeroid Server. A Quick Start on Makeroid","title":"Overview"},{"location":"#introduction","text":"Need some help with the components? Just looking around? Either way, the following docs will surely help you understand Makeroid better! For further help, please visit the Makeroid Community .","title":"Introduction"},{"location":"#getting-started-with-the-documentation","text":"","title":"Getting Started With the Documentation"},{"location":"#start-by-choosing-a-category","text":"","title":"Start by Choosing a Category"},{"location":"#main-categories","text":"Components User Interface Layout Media Drawing and Animation Sensors Social Storage Connectivity Google LEGO Mindstorms Monetization Device Experimental Blocks Control Logic Math Text Lists Colors Variables Procedures Screen Any Component","title":"Main Categories"},{"location":"#testing","text":"Live Development Via WiFi Via USB","title":"Testing"},{"location":"#other","text":"Extensions Create Extensions Resources Create Extensions Release Notes Backpack Donate","title":"Other"},{"location":"#makeroid","text":"Makeroid allows you to create Android apps easily with a blocks-type editor. No coding skills required. With the Material Design UI, your apps will stand out. We always listen to our users' opinions from our community (your suggestions, bug reports etc.).","title":"Makeroid"},{"location":"#useful-links","text":"","title":"Useful Links"},{"location":"#makeroid-builder","text":"This is the page you're going to use to build apps. This is main app that allows you to create anything you want with a Material Design UI.","title":"Makeroid Builder"},{"location":"#makeroid-community","text":"Using the community, you can get help related to your questions about Makeroid. Even submit your ideas to help improve Makeroid or even report bugs you've experienced during your app development session. Community has so many users that help you, this means you will get a proper answer to any question of yours in minutes.","title":"Makeroid Community"},{"location":"#makeroid-status-page","text":"Using the Status Page you can check which services' of Makeroid is working or in Maintenance. If you cannot use a service of Makeroid, you can check using this page if the problem is related to your local internet or the Makeroid Server.","title":"Makeroid Status Page"},{"location":"#a-quick-start-on-makeroid","text":"","title":"A Quick Start on Makeroid"},{"location":"components/","text":"Overview of components Components are the basic building blocks of your app. The behaviour and look are of your apps are customised with components. Component categories For easier access of components, they are grouped into various categories. Data Types The properties of a component and parameters of a method or event may be of one of the following types: Asset Color Number Text Asset An Asset type property can be set from the Designer by selecting an Asset from the uploaded assets for the app. From the Blocks Editor, it can be set using a Text block containing the path to that Asset. Color A Color found under the Color category. Number A Designer property of this type can be set by filling a number in the textbox From the blocks editor, the Number block can be found under the Math category. Text A Text is simply a string. It can have alphanumeric characters. For some properties and parameters, certain pre-determined Text are only allowed, which would be documented with them.","title":"Overview"},{"location":"components/#overview-of-components","text":"Components are the basic building blocks of your app. The behaviour and look are of your apps are customised with components.","title":"Overview  of components "},{"location":"components/#component-categories","text":"For easier access of components, they are grouped into various categories.","title":"Component categories"},{"location":"components/#data-types","text":"The properties of a component and parameters of a method or event may be of one of the following types: Asset Color Number Text","title":"Data Types"},{"location":"components/#asset","text":"An Asset type property can be set from the Designer by selecting an Asset from the uploaded assets for the app. From the Blocks Editor, it can be set using a Text block containing the path to that Asset.","title":"Asset"},{"location":"components/#color","text":"A Color found under the Color category.","title":"Color"},{"location":"components/#number","text":"A Designer property of this type can be set by filling a number in the textbox From the blocks editor, the Number block can be found under the Math category.","title":"Number"},{"location":"components/#text","text":"A Text is simply a string. It can have alphanumeric characters. For some properties and parameters, certain pre-determined Text are only allowed, which would be documented with them.","title":"Text"},{"location":"components/user-interface/button/","text":"Button Overview A button is a basic UI element with which the user can interact with your apps by tapping or clicking on it to perform an action. A typical button Properties Background Color ( Getter + Setter ) Type: Color The background color with which the text of the Button is shown. If the Image property is set, then this is overriden. Enabled ( Getter + Setter ) Type: Boolean Determines whether the Button is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The Button is enabled and will execute Events when they occur. false The Button is disabled and will not execute Events when they occur. Font Bold ( Getter + Setter ) Type: Boolean Determines whether the text of the Button is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style. Font Italic ( Getter + Setter ) Type: Boolean Determines whether the text of Button is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style. Font Size ( Getter + Setter ) Type: Number The font size with which the text of the Button is displayed. Font Typeface ( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font Font Typeface Import ( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks. Height ( Getter + Setter ) Type: Number The height with which the Button is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the Button is displayed in terms of precentage of the whole screen height. Image ( Getter + Setter ) Type: Asset The image that is displayed on the button as a background. This property overrides the Background Color property. Rotation Angle ( Getter + Setter ) Type: Number The degrees that the Button is rotated around the pivot point. Increasing values result in clockwise rotation. Shape ( Setter only )( Designer Only ) Type: Text The shape of the Button . Options Default The default shape of the button i.e a standard button. Rectangular The button is in rectangular shape , similar to Default shape. Rounded The corners of the button are rounded giving it a shape like rounded rectangle. Oval The Button is in the shape of an oval. Text ( Getter + Setter ) Type: Text The text displayed for the Button . Text Color ( Getter + Setter ) Type: Color The color of the Text displayed for the Button . Width ( Getter + Setter ) Type: Number The width with which the Button is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Button is displayed in terms of precentage of the whole screen width. Visible ( Getter + Setter ) Type: Boolean Determines whether the Button is visible on the screen and shown to the user or not. Options true The Button is shown to the user. false The Button is not shown to the user. Methods Button Click ( None ) Perform a Button click. The Click event is also fired when this method is executed. Events Click ( None ) Indicates that the user has clicked the button (i.e pressed and released) Got Focus ( None ) Indicates the has been cursor moved over the button so it is now possible to click it. Long Click ( None ) Indicates that the user has clicked and held down the button. Click event is not fired when the Button is long clicked. Lost Focus ( None ) Indicates the cursor moved away from the button so it is now no longer possible to click it.","title":"Button"},{"location":"components/user-interface/button/#button","text":"","title":"Button"},{"location":"components/user-interface/button/#overview","text":"A button is a basic UI element with which the user can interact with your apps by tapping or clicking on it to perform an action. A typical button","title":"Overview"},{"location":"components/user-interface/button/#properties","text":"","title":"Properties"},{"location":"components/user-interface/button/#background-color","text":"( Getter + Setter ) Type: Color The background color with which the text of the Button is shown. If the Image property is set, then this is overriden.","title":"Background Color"},{"location":"components/user-interface/button/#enabled","text":"( Getter + Setter ) Type: Boolean Determines whether the Button is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The Button is enabled and will execute Events when they occur. false The Button is disabled and will not execute Events when they occur.","title":"Enabled"},{"location":"components/user-interface/button/#font-bold","text":"( Getter + Setter ) Type: Boolean Determines whether the text of the Button is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font Bold"},{"location":"components/user-interface/button/#font-italic","text":"( Getter + Setter ) Type: Boolean Determines whether the text of Button is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font Italic"},{"location":"components/user-interface/button/#font-size","text":"( Getter + Setter ) Type: Number The font size with which the text of the Button is displayed.","title":"Font  Size"},{"location":"components/user-interface/button/#font-typeface","text":"( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font","title":"Font Typeface"},{"location":"components/user-interface/button/#font-typeface-import","text":"( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font Typeface Import"},{"location":"components/user-interface/button/#height","text":"( Getter + Setter ) Type: Number The height with which the Button is displayed.","title":"Height"},{"location":"components/user-interface/button/#heightpercent","text":"( Setter Only ) Type: Number The height with which the Button is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"components/user-interface/button/#image","text":"( Getter + Setter ) Type: Asset The image that is displayed on the button as a background. This property overrides the Background Color property.","title":"Image"},{"location":"components/user-interface/button/#rotation-angle","text":"( Getter + Setter ) Type: Number The degrees that the Button is rotated around the pivot point. Increasing values result in clockwise rotation.","title":"Rotation Angle"},{"location":"components/user-interface/button/#shape","text":"( Setter only )( Designer Only ) Type: Text The shape of the Button . Options Default The default shape of the button i.e a standard button. Rectangular The button is in rectangular shape , similar to Default shape. Rounded The corners of the button are rounded giving it a shape like rounded rectangle. Oval The Button is in the shape of an oval.","title":"Shape"},{"location":"components/user-interface/button/#text","text":"( Getter + Setter ) Type: Text The text displayed for the Button .","title":"Text"},{"location":"components/user-interface/button/#text-color","text":"( Getter + Setter ) Type: Color The color of the Text displayed for the Button .","title":"Text Color"},{"location":"components/user-interface/button/#width","text":"( Getter + Setter ) Type: Number The width with which the Button is displayed.","title":"Width"},{"location":"components/user-interface/button/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Button is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/button/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Button is visible on the screen and shown to the user or not. Options true The Button is shown to the user. false The Button is not shown to the user.","title":"Visible"},{"location":"components/user-interface/button/#methods","text":"","title":"Methods"},{"location":"components/user-interface/button/#button-click","text":"( None ) Perform a Button click. The Click event is also fired when this method is executed.","title":"Button Click"},{"location":"components/user-interface/button/#events","text":"","title":"Events"},{"location":"components/user-interface/button/#click","text":"( None ) Indicates that the user has clicked the button (i.e pressed and released)","title":"Click"},{"location":"components/user-interface/button/#got-focus","text":"( None ) Indicates the has been cursor moved over the button so it is now possible to click it.","title":"Got Focus"},{"location":"components/user-interface/button/#long-click","text":"( None ) Indicates that the user has clicked and held down the button. Click event is not fired when the Button is long clicked.","title":"Long Click"},{"location":"components/user-interface/button/#lost-focus","text":"( None ) Indicates the cursor moved away from the button so it is now no longer possible to click it.","title":"Lost Focus"},{"location":"components/user-interface/checkbox/","text":"Checkbox A checkbox is a GUI widget that allows the user to make a binary choice, i.e. a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' (checked) or 'no' (not checked) on a simple yes/no question. Often, a series of checkboxes are presented, each representing different options. Then the user may select several of the choices. The difference between a Radio button and a checkbox is that a checkbox allows the user to select multiple options from a set, while a Radio Button allows the user to select only one option from a set. Properties Background Color ( Getter + Setter ) Type: Color The background color with which the text of the Checkbox is shown. Checkbox Color ( Getter + Setter ) Type: Color The color of the checkbox displayed. This determines only the color of the checkbox and not its text. See Text Color for the color of the text. Checked ( Getter + Setter ) Type: Boolean Determines whether the Checkbox is checked or not. true if checked, false otherwise. Height ( Getter + Setter ) Type: Number The height with which the Checkbox is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the Checkbox is displayed in terms of precentage of the whole screen height. Text ( Getter + Setter ) Type: Text The text displayed for the Checkbox . Text Color ( Getter + Setter ) Type: Color The color of the Text displayed for the Checkbox . Visible ( Getter + Setter ) Type: Boolean Determines whether the Checkbox is visible on the screen and shown to the user or not. Options true The Checkbox is shown to the user. false The Checkbox is not shown to the user. Width ( Getter + Setter ) Type: Number The width with which the Checkbox is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Checkbox is displayed in terms of precentage of the whole screen width. Events Changed ( None ) Indicates that the user has checked or unchecked the Checkbox . Use the Getter block of Checked property inside this Event's block to know the current status. Got Focus ( None ) Indicates the has been cursor moved over the Checkbox so it is now possible to click it. Lost Focus ( None ) Indicates the cursor moved away from the Checkbox so it is now no longer possible to click it.","title":"Checkbox"},{"location":"components/user-interface/checkbox/#checkbox","text":"A checkbox is a GUI widget that allows the user to make a binary choice, i.e. a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' (checked) or 'no' (not checked) on a simple yes/no question. Often, a series of checkboxes are presented, each representing different options. Then the user may select several of the choices. The difference between a Radio button and a checkbox is that a checkbox allows the user to select multiple options from a set, while a Radio Button allows the user to select only one option from a set.","title":"Checkbox"},{"location":"components/user-interface/checkbox/#properties","text":"","title":"Properties"},{"location":"components/user-interface/checkbox/#background-color","text":"( Getter + Setter ) Type: Color The background color with which the text of the Checkbox is shown.","title":"Background Color"},{"location":"components/user-interface/checkbox/#checkbox-color","text":"( Getter + Setter ) Type: Color The color of the checkbox displayed. This determines only the color of the checkbox and not its text. See Text Color for the color of the text.","title":"Checkbox Color"},{"location":"components/user-interface/checkbox/#checked","text":"( Getter + Setter ) Type: Boolean Determines whether the Checkbox is checked or not. true if checked, false otherwise.","title":"Checked"},{"location":"components/user-interface/checkbox/#height","text":"( Getter + Setter ) Type: Number The height with which the Checkbox is displayed.","title":"Height"},{"location":"components/user-interface/checkbox/#heightpercent","text":"( Setter Only ) Type: Number The height with which the Checkbox is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"components/user-interface/checkbox/#text","text":"( Getter + Setter ) Type: Text The text displayed for the Checkbox .","title":"Text"},{"location":"components/user-interface/checkbox/#text-color","text":"( Getter + Setter ) Type: Color The color of the Text displayed for the Checkbox .","title":"Text Color"},{"location":"components/user-interface/checkbox/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Checkbox is visible on the screen and shown to the user or not. Options true The Checkbox is shown to the user. false The Checkbox is not shown to the user.","title":"Visible"},{"location":"components/user-interface/checkbox/#width","text":"( Getter + Setter ) Type: Number The width with which the Checkbox is displayed.","title":"Width"},{"location":"components/user-interface/checkbox/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Checkbox is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/checkbox/#events","text":"","title":"Events"},{"location":"components/user-interface/checkbox/#changed","text":"( None ) Indicates that the user has checked or unchecked the Checkbox . Use the Getter block of Checked property inside this Event's block to know the current status.","title":"Changed"},{"location":"components/user-interface/checkbox/#got-focus","text":"( None ) Indicates the has been cursor moved over the Checkbox so it is now possible to click it.","title":"Got Focus"},{"location":"components/user-interface/checkbox/#lost-focus","text":"( None ) Indicates the cursor moved away from the Checkbox so it is now no longer possible to click it.","title":"Lost Focus"},{"location":"components/user-interface/circular-progress/","text":"Circular Progress Overview Circular Progress displays progress by animating an indicator along an invisible circular track in a clockwise direction. The Circular Progress grows and shrinks in size while moving along the invisible track. An example of a Circular Progress . Properties Color ( Getter + Setter ) Type: Color The color with which the moving Circular Progess is displayed. Height ( Getter + Setter ) Type: Number The height with which the Circular Progress is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the Circular Progress is displayed in terms of precentage of the whole screen height. Visible ( Getter + Setter ) Type: Boolean Determines whether the Circular Progress is visible on the screen and shown to the user or not. Options true The Circular Progress is shown to the user. false The Circular Progress is not shown to the user. Width ( Getter + Setter ) Type: Number The width with which the Circular Progress is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Circular Progress is displayed in terms of precentage of the whole screen width.","title":"Circular Progress"},{"location":"components/user-interface/circular-progress/#circular-progress","text":"","title":"Circular Progress"},{"location":"components/user-interface/circular-progress/#overview","text":"Circular Progress displays progress by animating an indicator along an invisible circular track in a clockwise direction. The Circular Progress grows and shrinks in size while moving along the invisible track. An example of a Circular Progress .","title":"Overview"},{"location":"components/user-interface/circular-progress/#properties","text":"","title":"Properties"},{"location":"components/user-interface/circular-progress/#color","text":"( Getter + Setter ) Type: Color The color with which the moving Circular Progess is displayed.","title":"Color"},{"location":"components/user-interface/circular-progress/#height","text":"( Getter + Setter ) Type: Number The height with which the Circular Progress is displayed.","title":"Height"},{"location":"components/user-interface/circular-progress/#heightpercent","text":"( Setter Only ) Type: Number The height with which the Circular Progress is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"components/user-interface/circular-progress/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Circular Progress is visible on the screen and shown to the user or not. Options true The Circular Progress is shown to the user. false The Circular Progress is not shown to the user.","title":"Visible"},{"location":"components/user-interface/circular-progress/#width","text":"( Getter + Setter ) Type: Number The width with which the Circular Progress is displayed.","title":"Width"},{"location":"components/user-interface/circular-progress/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Circular Progress is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/linear-progressbar/","text":"Linear Progressbar Overview A Progressbar is used to visually indicate the user the progress of some task, such as a download, data transfer etc. A determinate progress bar is used to indicate the progress of an task whose exact value of progress is known for eg. the percentage of a file download, number of files transferred. A indeterminate progress bar is used in situations where the extent of the task is unknown or the progress of the task cannot be determined in a way that could be expressed as a percentage, for example, when a request to a server is being processed where we don't know the exact value of progress, but there is a need to indicate to the user that the task is in progress. A determinate progressbar fills from 0% to 100%. An indeterminate progress bar moves in a fixed path, growing and shrinking in size. Tip Use progressbars in a non-interupptive manner. Properties Indeterminate ( Getter + Setter ) Type: Boolean Determines whether the progress bar is to be displayed in the indeterminate mode. (See Overview for the difference between determinate and indeterminate modes.) Options true The progressbar is in indeterminate mode. false The progressbar is in determinate mode. Indeterminate Color ( Getter + Setter ) Type: Color The color in which the indeterminate progress bar is displayed, if the Indeterminate property is set to true . Has no effect on the apperance of the determinate progress bar. Maximum ( Getter + Setter ) Type: Number The upper range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 100 Minimum ( Getter + Setter ) Type: Number The lower range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 0 Note This property can be set only on devices using Android Oreo or newer versions. Setting this method has no effect on devices using older versions of Android. Progress ( Getter + Setter ) Type: Number The current progress value of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) When using Getter , returns 0 if Indeterminate is set to true Width ( Getter + Setter ) Type: Number The width with which the Linear Progressbar is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Linear Progressbar is displayed in terms of precentage of the whole screen width. Visible ( Getter + Setter ) Type: Boolean Determines whether the Linear Progressbar is visible on the screen and shown to the user or not. Options true The Linear Progressbar is shown to the user. false The Linear Progressbar is not shown to the user. Methods Increment Progress By ( Number value ) Increases the value progress by the given value. Params value Number: The amount by which progress should be increased. Events Progress Changed ( Number progress ) Indicates that the value of the progress bar has changed. Params progress Number: The current value of the progressbar.This is 0 if the progressbar is in indeterminate mode.","title":"Linear Progressbar"},{"location":"components/user-interface/linear-progressbar/#linear-progressbar","text":"","title":"Linear Progressbar"},{"location":"components/user-interface/linear-progressbar/#overview","text":"A Progressbar is used to visually indicate the user the progress of some task, such as a download, data transfer etc. A determinate progress bar is used to indicate the progress of an task whose exact value of progress is known for eg. the percentage of a file download, number of files transferred. A indeterminate progress bar is used in situations where the extent of the task is unknown or the progress of the task cannot be determined in a way that could be expressed as a percentage, for example, when a request to a server is being processed where we don't know the exact value of progress, but there is a need to indicate to the user that the task is in progress. A determinate progressbar fills from 0% to 100%. An indeterminate progress bar moves in a fixed path, growing and shrinking in size. Tip Use progressbars in a non-interupptive manner.","title":"Overview"},{"location":"components/user-interface/linear-progressbar/#properties","text":"","title":"Properties"},{"location":"components/user-interface/linear-progressbar/#indeterminate","text":"( Getter + Setter ) Type: Boolean Determines whether the progress bar is to be displayed in the indeterminate mode. (See Overview for the difference between determinate and indeterminate modes.) Options true The progressbar is in indeterminate mode. false The progressbar is in determinate mode.","title":"Indeterminate"},{"location":"components/user-interface/linear-progressbar/#indeterminate-color","text":"( Getter + Setter ) Type: Color The color in which the indeterminate progress bar is displayed, if the Indeterminate property is set to true . Has no effect on the apperance of the determinate progress bar.","title":"Indeterminate Color"},{"location":"components/user-interface/linear-progressbar/#maximum","text":"( Getter + Setter ) Type: Number The upper range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 100","title":"Maximum"},{"location":"components/user-interface/linear-progressbar/#minimum","text":"( Getter + Setter ) Type: Number The lower range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 0 Note This property can be set only on devices using Android Oreo or newer versions. Setting this method has no effect on devices using older versions of Android.","title":"Minimum"},{"location":"components/user-interface/linear-progressbar/#progress","text":"( Getter + Setter ) Type: Number The current progress value of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) When using Getter , returns 0 if Indeterminate is set to true","title":"Progress"},{"location":"components/user-interface/linear-progressbar/#width","text":"( Getter + Setter ) Type: Number The width with which the Linear Progressbar is displayed.","title":"Width"},{"location":"components/user-interface/linear-progressbar/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Linear Progressbar is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/linear-progressbar/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Linear Progressbar is visible on the screen and shown to the user or not. Options true The Linear Progressbar is shown to the user. false The Linear Progressbar is not shown to the user.","title":"Visible"},{"location":"components/user-interface/linear-progressbar/#methods","text":"","title":"Methods"},{"location":"components/user-interface/linear-progressbar/#increment-progress-by","text":"( Number value ) Increases the value progress by the given value. Params value Number: The amount by which progress should be increased.","title":"Increment Progress By"},{"location":"components/user-interface/linear-progressbar/#events","text":"","title":"Events"},{"location":"components/user-interface/linear-progressbar/#progress-changed","text":"( Number progress ) Indicates that the value of the progress bar has changed. Params progress Number: The current value of the progressbar.This is 0 if the progressbar is in indeterminate mode.","title":"Progress Changed"},{"location":"includes/all-font-properties/","text":"Font Bold ( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style. Font Italic ( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style. Font Size ( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed. Font Typeface ( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font Font Typeface Import ( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"All font properties"},{"location":"includes/all-font-properties/#font-bold","text":"( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font Bold"},{"location":"includes/all-font-properties/#font-italic","text":"( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font Italic"},{"location":"includes/all-font-properties/#font-size","text":"( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed.","title":"Font  Size"},{"location":"includes/all-font-properties/#font-typeface","text":"( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font","title":"Font Typeface"},{"location":"includes/all-font-properties/#font-typeface-import","text":"( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font Typeface Import"},{"location":"includes/bgcolor-property/","text":"Background Color ( Getter + Setter ) Type: Color The background color with which the text of the {{ meta.component }} is shown.","title":"Bgcolor property"},{"location":"includes/bgcolor-property/#background-color","text":"( Getter + Setter ) Type: Color The background color with which the text of the {{ meta.component }} is shown.","title":"Background Color"},{"location":"includes/enabled-property/","text":"Enabled ( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The {{ meta.component }} is enabled and will execute Events when they occur. false The {{ meta.component }} is disabled and will not execute Events when they occur.","title":"Enabled property"},{"location":"includes/enabled-property/#enabled","text":"( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The {{ meta.component }} is enabled and will execute Events when they occur. false The {{ meta.component }} is disabled and will not execute Events when they occur.","title":"Enabled"},{"location":"includes/font-bold-property/","text":"Font Bold ( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font bold property"},{"location":"includes/font-bold-property/#font-bold","text":"( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font Bold"},{"location":"includes/font-italic-property/","text":"Font Italic ( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font italic property"},{"location":"includes/font-italic-property/#font-italic","text":"( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font Italic"},{"location":"includes/font-size-property/","text":"Font Size ( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed.","title":"Font size property"},{"location":"includes/font-size-property/#font-size","text":"( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed.","title":"Font  Size"},{"location":"includes/font-typeface-import-property/","text":"Font Typeface Import ( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font typeface import property"},{"location":"includes/font-typeface-import-property/#font-typeface-import","text":"( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font Typeface Import"},{"location":"includes/font-typeface-property/","text":"Font Typeface ( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font.","title":"Font typeface property"},{"location":"includes/font-typeface-property/#font-typeface","text":"( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font.","title":"Font Typeface"},{"location":"includes/height-property/","text":"Height ( Getter + Setter ) Type: Number The height with which the {{ meta.component }} is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the {{ meta.component }} is displayed in terms of precentage of the whole screen height.","title":"Height property"},{"location":"includes/height-property/#height","text":"( Getter + Setter ) Type: Number The height with which the {{ meta.component }} is displayed.","title":"Height"},{"location":"includes/height-property/#heightpercent","text":"( Setter Only ) Type: Number The height with which the {{ meta.component }} is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"includes/text-property/","text":"Text ( Getter + Setter ) Type: Text The text displayed for the {{ meta.component }} . Text Color ( Getter + Setter ) Type: Color The color of the Text displayed for the {{ meta.component }} .","title":"Text property"},{"location":"includes/text-property/#text","text":"( Getter + Setter ) Type: Text The text displayed for the {{ meta.component }} .","title":"Text"},{"location":"includes/text-property/#text-color","text":"( Getter + Setter ) Type: Color The color of the Text displayed for the {{ meta.component }} .","title":"Text Color"},{"location":"includes/visible-property/","text":"Visible ( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is visible on the screen and shown to the user or not. Options true The {{ meta.component }} is shown to the user. false The {{ meta.component }} is not shown to the user.","title":"Visible property"},{"location":"includes/visible-property/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is visible on the screen and shown to the user or not. Options true The {{ meta.component }} is shown to the user. false The {{ meta.component }} is not shown to the user.","title":"Visible"},{"location":"includes/width-property/","text":"Width ( Getter + Setter ) Type: Number The width with which the {{ meta.component }} is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the {{ meta.component }} is displayed in terms of precentage of the whole screen width.","title":"Width property"},{"location":"includes/width-property/#width","text":"( Getter + Setter ) Type: Number The width with which the {{ meta.component }} is displayed.","title":"Width"},{"location":"includes/width-property/#widthpercent","text":"( Setter Only ) Type: Number The width with which the {{ meta.component }} is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"live-development/","text":"Live Development It can be quite a hassle building and installing your project's APK file on your device whenever you make a change. Makeroid has one feature that makes the process of designing your apps much easier - the Makeroid companion. The companion can be installed on your device just like any normal Android app. Once you've connected the companion to the builder, either by WiFi or USB, the changes you make in the designer, will be instantly displayed on your device. Visit the below pages to learn how to connect the companion via different ways: Via WiFi Via USB Installing the Makeroid Companion on Android Phone / Emulator Step 1: Download the Makeroid Companion from the Google Play Store . Step 2: Open the app","title":"Overview"},{"location":"live-development/#live-development","text":"It can be quite a hassle building and installing your project's APK file on your device whenever you make a change. Makeroid has one feature that makes the process of designing your apps much easier - the Makeroid companion. The companion can be installed on your device just like any normal Android app. Once you've connected the companion to the builder, either by WiFi or USB, the changes you make in the designer, will be instantly displayed on your device. Visit the below pages to learn how to connect the companion via different ways: Via WiFi Via USB","title":"Live Development"},{"location":"live-development/#installing-the-makeroid-companion-on-android-phone-emulator","text":"Step 1: Download the Makeroid Companion from the Google Play Store . Step 2: Open the app","title":"Installing the Makeroid Companion on Android Phone / Emulator"},{"location":"live-development/usb/","text":"Via USB Installing Makeroid Starter Install ADB Follow this tutorial to install ADB files on your OS: https://www.xda-developers.com/install-adb-windows-macos-linux/ Check Installation $ adb version Android Debug Bridge version 1.0.39 Revision 3db08f2c6889-android Installed as C:\\WINDOWS\\adb.exe Install Python Download and install latest version of Python 3 from here: https://www.python.org/downloads/ Check Installation $ python -V Python 3.6.4 $ pip -V pip 10.0.1 from c:\\python3\\lib\\site-packages\\pip (python 3.6) Download Script File Download the files from https://github.com/Makeroid/Starter/releases/latest Save the folder to anywhere. You can also add it to Desktop as shortcut. {% hint style=\"warning\" %} The path should not contain spaces. Run this command on the same directory where the Makeroid pip install -r requirements.txt Run Makeroid Starter To run Makeroid Starter, select your OS from the tabs and follow the directions. {% tabs %} {% tab title=\"Windows\" %} You can just double click on the file to open the starter. {% tab title=\"Linux\" %} {% endtab %} {% tab title=\"MacOS\" %} {% endtab %} Connect to Companion Step 1: From the App Bar, choose \"Test\". Step 2: Click on \"USB\" and wait a few seconds. Step 3: You've successfully linked your Android Phone to the Makeroid Builder. Tip If you are having connection problems, check the Makeroid Starter Checker . Remember that this connecting process is not a one time process and you need to do this every time you close Makeroid Builder or the Makeroid Companion.","title":"Via USB"},{"location":"live-development/usb/#via-usb","text":"","title":"Via USB"},{"location":"live-development/usb/#installing-makeroid-starter","text":"","title":"Installing Makeroid Starter"},{"location":"live-development/usb/#install-adb","text":"Follow this tutorial to install ADB files on your OS: https://www.xda-developers.com/install-adb-windows-macos-linux/","title":"Install ADB"},{"location":"live-development/usb/#check-installation","text":"$ adb version Android Debug Bridge version 1.0.39 Revision 3db08f2c6889-android Installed as C:\\WINDOWS\\adb.exe","title":"Check Installation"},{"location":"live-development/usb/#install-python","text":"Download and install latest version of Python 3 from here: https://www.python.org/downloads/","title":"Install Python"},{"location":"live-development/usb/#check-installation_1","text":"$ python -V Python 3.6.4 $ pip -V pip 10.0.1 from c:\\python3\\lib\\site-packages\\pip (python 3.6)","title":"Check Installation"},{"location":"live-development/usb/#download-script-file","text":"Download the files from https://github.com/Makeroid/Starter/releases/latest Save the folder to anywhere. You can also add it to Desktop as shortcut. {% hint style=\"warning\" %} The path should not contain spaces. Run this command on the same directory where the Makeroid pip install -r requirements.txt","title":"Download Script File"},{"location":"live-development/usb/#run-makeroid-starter","text":"To run Makeroid Starter, select your OS from the tabs and follow the directions. {% tabs %} {% tab title=\"Windows\" %} You can just double click on the file to open the starter. {% tab title=\"Linux\" %} {% endtab %} {% tab title=\"MacOS\" %} {% endtab %}","title":"Run Makeroid Starter"},{"location":"live-development/usb/#connect-to-companion","text":"Step 1: From the App Bar, choose \"Test\". Step 2: Click on \"USB\" and wait a few seconds. Step 3: You've successfully linked your Android Phone to the Makeroid Builder. Tip If you are having connection problems, check the Makeroid Starter Checker . Remember that this connecting process is not a one time process and you need to do this every time you close Makeroid Builder or the Makeroid Companion.","title":"Connect to Companion"},{"location":"live-development/wifi/","text":"Via WiFi Step 1: From the App Bar, choose \"Test\". Step 2: Click on \"Companion\" to get a QR Code that we are going to use to connect our phone to the Builder. Step 3: Save the QR Code (or the code appears next to do QR Code incase you want to enter the code manually) you got from the Makeroid Builder for next steps, now to the next phase. Step 3: Click on Scan \"QR Code\" or \"Connect with code\" on the companion app and scan the QR Code or type in the code that you see on the Makeroid Builder. Step 4: You've successfully linked your Android Phone / emulator to the Makeroid Builder. Remember that this connecting process is not a one time process and you need to do this every time you close Makeroid Builder or the Makeroid Companion.","title":"Via WiFi"},{"location":"live-development/wifi/#via-wifi","text":"Step 1: From the App Bar, choose \"Test\". Step 2: Click on \"Companion\" to get a QR Code that we are going to use to connect our phone to the Builder. Step 3: Save the QR Code (or the code appears next to do QR Code incase you want to enter the code manually) you got from the Makeroid Builder for next steps, now to the next phase. Step 3: Click on Scan \"QR Code\" or \"Connect with code\" on the companion app and scan the QR Code or type in the code that you see on the Makeroid Builder. Step 4: You've successfully linked your Android Phone / emulator to the Makeroid Builder. Remember that this connecting process is not a one time process and you need to do this every time you close Makeroid Builder or the Makeroid Companion.","title":"Via WiFi"},{"location":"other/backpack/","text":"Backpack Backpack Backpack: Copy and Paste Blocks to DifferentScreens and Projects TheBackpack allows you to carry around blocks throughout your project repositories, allowing blocks to be transferred between projects and between screens. The contents of the Backpackare persistent across logins. When you login to MIT App Inventor, you will find the blocks you left from your last session. Click here for a video demo. How does Backpack work? The Backpack is a copy-and-paste feature that works between projects and screens. The Backpack icon is located at the upper-right corner of theworkspace. Copying Blocks. Blocks from the workspace can be dragged and dropped into Backpack. This is the copy operation -- the blocks are copied (duplicated) in the backpack. When blocks are dropped into the Backpack, an animation and sound will occur to confirm for the user that the operation was successful. The blocks are not removed from the workspace. Viewing the Backpack Contents. The contents of the Backpack can be viewed by clicking on its icon (upper right corner of the workspace). A scrollable flyout will pull out from the right edge of the workspace, displaying the Backpack\u2019s contents. The flyout of the Backpack works the same way as the flyouts in the Block drawers. To close the flyout without pasting any blocks, you can click the workspace or click any empty space in the Backpack with no block highlighted. Note that if you click on a highlighted block in the flyout, that block will be pasted to the workspace. Pasting Blocks. Blocks can be pasted from the backpack into the current workspace by clicking on the Backpack icon (upper right corner of the workspace) and dragging the block from the flyout to the desired location in the workspace. Background Menus In addition to the drag-and-drop functionality, you can select Backpack functions by right-clicking on a block or on the workspace, as shown in the following image. right click on a block right click on the workspace right click on a block in backpack","title":"Backpack"},{"location":"other/backpack/#backpack","text":"","title":"Backpack"},{"location":"other/backpack/#backpack_1","text":"Backpack: Copy and Paste Blocks to DifferentScreens and Projects TheBackpack allows you to carry around blocks throughout your project repositories, allowing blocks to be transferred between projects and between screens. The contents of the Backpackare persistent across logins. When you login to MIT App Inventor, you will find the blocks you left from your last session. Click here for a video demo.","title":"Backpack"},{"location":"other/backpack/#how-does-backpack-work","text":"The Backpack is a copy-and-paste feature that works between projects and screens. The Backpack icon is located at the upper-right corner of theworkspace. Copying Blocks. Blocks from the workspace can be dragged and dropped into Backpack. This is the copy operation -- the blocks are copied (duplicated) in the backpack. When blocks are dropped into the Backpack, an animation and sound will occur to confirm for the user that the operation was successful. The blocks are not removed from the workspace. Viewing the Backpack Contents. The contents of the Backpack can be viewed by clicking on its icon (upper right corner of the workspace). A scrollable flyout will pull out from the right edge of the workspace, displaying the Backpack\u2019s contents. The flyout of the Backpack works the same way as the flyouts in the Block drawers. To close the flyout without pasting any blocks, you can click the workspace or click any empty space in the Backpack with no block highlighted. Note that if you click on a highlighted block in the flyout, that block will be pasted to the workspace. Pasting Blocks. Blocks can be pasted from the backpack into the current workspace by clicking on the Backpack icon (upper right corner of the workspace) and dragging the block from the flyout to the desired location in the workspace.","title":"How does Backpack work?"},{"location":"other/backpack/#background-menus","text":"In addition to the drag-and-drop functionality, you can select Backpack functions by right-clicking on a block or on the workspace, as shown in the following image. right click on a block right click on the workspace right click on a block in backpack","title":"Background Menus"},{"location":"other/release-notes/","text":"Release Notes 1.1 Butterfly | 19 August 2018 Changelog Release Notes 1.0 Andromeda | 22 June 2018 Changelog Release Notes","title":"Release Notes"},{"location":"other/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"other/release-notes/#11-butterfly-124-19-august-2018","text":"","title":"1.1 Butterfly   |   19 August 2018"},{"location":"other/release-notes/#changelog","text":"Release Notes","title":"Changelog"},{"location":"other/release-notes/#10-andromeda-124-22-june-2018","text":"","title":"1.0 Andromeda   |   22 June 2018"},{"location":"other/release-notes/#changelog_1","text":"Release Notes","title":"Changelog"},{"location":"other/release-notes/andromeda/","text":"Andromeda 1.0 Andromeda | 22 June 2018 Major Changes Upgraded Minimum API from 14 ( Android 4.0 ) to 16 ( Android 4.1 ) Added Copy Screen feature Added Import Screen (.AIS) and Export Screen (.AIS) Added British English and Portuguese languages Added a nice Welcome Email for new users Upgraded Google Login system Say bye to that ugly Google Login, and say hello to OAuth2 Implemented Email Password login system Welcome China users! You can now use Makeroid without a VPN Implemented Runtime Permission system Watch this video to see what is this Upgraded Target SDK to API 27 ( Android 8.1 ) This warning will NOT appear again : Makeroid is the first builder on implementing a real Target SDK 27, as it\u2019s required to have runtime permissions as we use now Improved server perfomance See \u201cServers\u201d section Added fancy error pages when 5xx error appears Changed Default Package Name Changed from com.makeroid.email.app to io.makeroid.email.app This only applies to new apps. Old created apps will still have the old format Removed 10MB app limit Testing showed that now the limit is on 20MB Removed black SplashScreen You can now even set your own image ! Added new blocks \u201c Break \u201d block will allow you to stop loops \u201c Wait for milliseconds \u201d block will allow you to stop the execution of your code X milliseconds You can now delete a single block / group of blocks from the Backpack Added abilty to move blocks with arrow keys on Blocks Editor General Data Protection Regulation : Added to AdMob components new dialog asking for consent for EU users to show customized ads Added warning when dropping AdMob components to phone New Services Makeroid Account Centralized login system for all Makeroid Services and control panel for your data Makeroid IDE Build Makeroid Extensions online without installing any external software Makeroid Store New online Store developed by Makeroid to share Apps, AIAs, Screens and Extensions Servers AppEngine instance uses now better servers so lag should have been reduced Three compilers will now be processing app builds : Dedicated VPS Cloud servers with 2 CPUs up to 3.1GHz , 4GB of RAM and 100MB/s of minimum bandwidth In front of all of them there is a dedicated load balancer in ArubaCloud redirecting requests to reduce their loads This allows us to create new compilers without having to stop our service or build requests It will also automatically stop forwarding traffic to compilers that are down until they are fixed Thanks to our partner ArubaCloud , Makeroid Servers are much powerful now Companion Changed Companio n design Now it\u2019s much more simple, clean and useful Changed Companion Package Name to io.makeroid.companion Previously com.makeroid.companion Companion is now only compatible with Android 5.0 or higher Implemented some translations on Companion UI Changes Mock-Phone Preview : This means that these settings, when changed, will be now updated on the phone preview Show/Hide Navigation Bar Show/Hide Status Bar Show/Hide Title Bar Show/Hide 3 Dots Color of Navigation Bar Color of TitleBar Text Text of TitleBar Subtitle Properties of Radio Button Clickable property of any Layout COMPLETLY REDESIGNED MAKEROID UI Makeroid wants to be unique, so our amazing designer @Vishwas implemented the official Material Design into Makeroid Builder Now it is much clean and simple: Added a SearchBox in Palette Moved properties to hidden panel , so if you want to show them just click on the name of a Component Added categories to properties for a better sorting And, yeah, you are right. All SneakPeeks were \u201cfake\u201d We\u2019ve used the old design in the SneakPeeks because we didn\u2019t want to leak anything releated with it Redesigned Building Project dialog Added Hide Dialog button Non-Visible components names are now visible below Mock-Phone Increased SplashScreen height Added country flags next to their respective languages on Language Selector Fixed Dark Theme Bugs Fixed Fixed Layouts issues Layouts were always clickable Extensions that were depending on Layouts weren\u2019t working properly Fixed TitleBar Tabs issue which made them to have the previous color when TitleBar Color was changed Fixed ListView NullPointerException on some devices Fixed Show/Hide Navigation Bar not working in some devices Fixed \u201creset\u201d Screen bug on Orientation Change Fixed Logout issue which was logging out from ALL Google Accounts Fixed Color for StatusBar and TitleBar issue Fixed TopBar buttons issue which was overriding the created tab Fixed blocks getting stacked on top of eachother Fixed Blockly Translations issue Fixed Custom Package Name Now this Tutorial is no longer required! Fixed Tablet-Mode bug causing strange behaiours on refreshing New Components Added new Bottom Sheet component to User Interface category Added new Circular Progress component to User Interface category Added new Linear Progress component to User Interface category Added new Snack Bar component to User Interface category Added new View Flipper component to User Interface category Added new Card View component to Layout category Added new ExoPlayer component to Media category Added new Maps components to new Maps category Thanks to MIT App Inventor Team Added new Dynamic Button component to new Dynamic category Added new Dynamic Label component to new Dynamic category Added new Dynamic TextBox component to new Dynamic category Added new Amazon Ads components to Monetization category Thanks to AppyBuilder Team Amazon Banner Amazon Interstitial Added new Facebook Ads components to Monetization category Facebook Banner Facebook Interstitial Added new Shell component to Experimental category Renamed Google Map to Google Maps Moved Surface View to Layout Category App Features Side Menu This new feature allows you to create professional side menus from blocks. You will just need to design inside a Vertical Layout what you want, and then call it from blocks Download this APK for a demo, or read this tutorial to see how to create one Functions: SideMenu - Creates a Side Menu with the give Layout Side Menu Open - Opens the Side Menu Side Menu Close - Closes the Side Menu Properties: Is Side Menu Open - Returns true if the Side Menu is open Events: Side Menu Opened - Triggered when the Side Menu is opened Side Menu Closed - Triggered when the Side Menu is closed This feature is not fully compatible with the Companion and it can make it to crash Splash Screen Based from this suggestion , Makeroid has removed the black screen that appeard when app is loading Also, we have added some options for it if users wants to customize it more Splash Enabled : If selected, the app will remove the black screen Splash Image ( Available when Splash Enabled checked ): If set, the app will show this image instead of the black image New Functions: Add Menu Item with Icon : Adds an item to the menu but with an image New Properties: About Screen Background Color : Sets the background color of the About Screen Accent Color : Sets the Accent Color of the App Primary Color / Title Bar Color : Sets the Primary Color of the App, which is the Title Bar Color if not set Primary Color Dark / Status Bar Color : Sets the Primary Dark Color of the app, which is the Status Bar Color if not set Screen Orientation : Added Behind , Full Sensor , No Sensor , Reverse , Landscape , Reverse Portrait , Sensor Landscape and Sensor Portrait Theme : Sets the theme for the app between Default , Light Theme or Dark Theme New Events Notifier component Custom Dialog Selection : triggered after selecting a Custom Dialog Web Viewer component Web View String Change : triggered after the WebViewerString changes File component After Zip : triggered after successful Zip After Unzip : triggered after successful Unzip On Zip Failure : triggered when an error occurrs in Zip or Unzip New Functions Button component Set Shadow : sets a shadow for the Button Thanks to AppyBuilder Team Checkbox component Set Shadow : sets a shadow for the Checkbox Thanks to AppyBuilder Team Image component Clear Image Tint Color : cleans the Tint Color set for the Image Notifier component Create Custom Dialog : creates a Custom Dialog from the given component (removes it from the Screen and places in the Custom Dialog ) Show Custom Dialog : shows a Custom Dialog Textbox component Set Shadow : sets a shadow for the Textbox Thanks to AppyBuilder Team Canvas component DrawArc : generates an Arc with the given params DrawShape : generates a Shape with the given points from a list File component Zip : zips a given folder in the given path, with an optional password Unzip : unzips a given file in the given folder, with an optioanl password if set Device Tools component Copy : copies the given text to the clipboard Parse : parsers the given string with _between a start and an end Paste : pastes the copied text Web component URI Decode : decodes the given URI Encoded text WiFi component Mac Address : returns the MAC Address of the device New Properties Button component Rotation Angle Image component Clickable Image Tint Color Customizable from Blocks ListPicker component Title Visible Notifier component Dim Amount Use Background Color Slider component Rotation Angle TextBox component Rotation Angle Layout components Clickable Use Round Card OCR component Language EmailPicker component Cursor Color Line Color FusionTables component Loading Dialog Message Show Loading Dialog TinyDB component Namespace Screenshot component Dim Amount Notification Share Button are Permissions Granted Available at Blocks is Read Permission Granted Available at Blocks is Write Permission Granted Available at Blocks Download component Requires Charging Customizable from Blocks Requires Device Idle Customizable from Blocks 1.0.1 Andromeda | 23 June 2018 Bugs Fixed Fixed: Download app scannign QR Code ( missing GPlay update, probably tomorrow it will be live) Fixed: \u201cCreate\u201d block from \u201cFAB\u201d was crashing companion if there was no image added Fixed: ListViews Fixed: Random crashes using some components 1.0.2 Andromeda | 28 June 2018 New Blocks Added RemoveSideMenu block to Screen Bugs Fixed Temporarily removed Import/Export screen feature Removed \u201cwait for milliseconds\u201d block Fixed: Server error that sometimes happened when copying screens Fixed: Copied screens couldn\u2019t be opened Fixed: Errors with extensions Fixed: Some issues with Leadbolt component Fixed: Sizing issues with CardView component Fixed: TitleBar Subtitle not updating on the companion when subtitle removed Fixed: Some issues with ListViewImageText 1.0.3 Andromeda | 19 July 2018 UI Changes Added \u201c Import Project \u201d button on Projects Panel Added \u201c Loading Project \u201d dialog Imported Turkish Translation to Blockly Fixed some Descriptions for some components which had a larger font Made ScrollBar of Palette thicker Companion Added missing \u201c:\u201d to IP Address Label New Features Added \u201cShow Ad\u201d block for Facebook Interstitial Ad component CloudDB component now handles images Bugs Fixed NullPointer Exception on some Alerts NullPointer Exception on GetUserId of PushNotifications Button Size wasn\u2019t affected if Shape was set Facebook Interstitial Ad should be working now 1.0.4 Andromeda | 28 July 2018 UI Changes Fixed \" Loading Project \" dialog shown even when project loaded Fixed \" Blockly Panel \" as it was overlapping with Components Scrollbar Increased Scrollbar Width on Components panel Added confirmation dialog when removing Screen Added confirmation dialog when removing Project Redesigned how \" Component Help \" is shown Improvements Improved \" Search Component \" speed Minimized CSS files to improve load time Improved Blocks Editor performance Bugs Fixed Facebook Ads were not declared on Manifest Sharing Component was not working Removed some unused libraries (APKs should be a little bit lighter now) 1.0.5 Andromeda | 14 August 2018 UI Changes Brought back AppInventor Color Picker Added clickable links to \" Learn more at \" in components info Improvements Improved Loading Project time Added warning when using Builder over HTTPS Removed some unused libraries from APKs Integrated Fabric into Makeroid Apps Now we will get detailed crash info thanks to Crashlitics, which will help us to fix bugs You can check the bugs that are being tracked in this repository Bugs Fixed Fixed AdMob Rewarded Video ( Sometimes ad weren't showing ) Fixed Assets Manager ( Internal Error appeard sometimes ) Fixed OCR Component ( NoPeer Certificate when making request ) Fixed AdMob Consent ( Title was shown instead of Message ) Fixed Search Components ( Search was performed using Component Class instead of Component Name )","title":"Andromeda"},{"location":"other/release-notes/andromeda/#andromeda","text":"","title":"Andromeda"},{"location":"other/release-notes/andromeda/#10-andromeda-124-22-june-2018","text":"","title":"1.0 Andromeda   |   22 June 2018"},{"location":"other/release-notes/andromeda/#major-changes","text":"Upgraded Minimum API from 14 ( Android 4.0 ) to 16 ( Android 4.1 ) Added Copy Screen feature Added Import Screen (.AIS) and Export Screen (.AIS) Added British English and Portuguese languages Added a nice Welcome Email for new users Upgraded Google Login system Say bye to that ugly Google Login, and say hello to OAuth2 Implemented Email Password login system Welcome China users! You can now use Makeroid without a VPN Implemented Runtime Permission system Watch this video to see what is this Upgraded Target SDK to API 27 ( Android 8.1 ) This warning will NOT appear again : Makeroid is the first builder on implementing a real Target SDK 27, as it\u2019s required to have runtime permissions as we use now Improved server perfomance See \u201cServers\u201d section Added fancy error pages when 5xx error appears Changed Default Package Name Changed from com.makeroid.email.app to io.makeroid.email.app This only applies to new apps. Old created apps will still have the old format Removed 10MB app limit Testing showed that now the limit is on 20MB Removed black SplashScreen You can now even set your own image ! Added new blocks \u201c Break \u201d block will allow you to stop loops \u201c Wait for milliseconds \u201d block will allow you to stop the execution of your code X milliseconds You can now delete a single block / group of blocks from the Backpack Added abilty to move blocks with arrow keys on Blocks Editor General Data Protection Regulation : Added to AdMob components new dialog asking for consent for EU users to show customized ads Added warning when dropping AdMob components to phone","title":"Major Changes"},{"location":"other/release-notes/andromeda/#new-services","text":"Makeroid Account Centralized login system for all Makeroid Services and control panel for your data Makeroid IDE Build Makeroid Extensions online without installing any external software Makeroid Store New online Store developed by Makeroid to share Apps, AIAs, Screens and Extensions","title":"New Services"},{"location":"other/release-notes/andromeda/#servers","text":"AppEngine instance uses now better servers so lag should have been reduced Three compilers will now be processing app builds : Dedicated VPS Cloud servers with 2 CPUs up to 3.1GHz , 4GB of RAM and 100MB/s of minimum bandwidth In front of all of them there is a dedicated load balancer in ArubaCloud redirecting requests to reduce their loads This allows us to create new compilers without having to stop our service or build requests It will also automatically stop forwarding traffic to compilers that are down until they are fixed Thanks to our partner ArubaCloud , Makeroid Servers are much powerful now","title":"Servers"},{"location":"other/release-notes/andromeda/#companion","text":"Changed Companio n design Now it\u2019s much more simple, clean and useful Changed Companion Package Name to io.makeroid.companion Previously com.makeroid.companion Companion is now only compatible with Android 5.0 or higher Implemented some translations on Companion","title":"Companion"},{"location":"other/release-notes/andromeda/#ui-changes","text":"Mock-Phone Preview : This means that these settings, when changed, will be now updated on the phone preview Show/Hide Navigation Bar Show/Hide Status Bar Show/Hide Title Bar Show/Hide 3 Dots Color of Navigation Bar Color of TitleBar Text Text of TitleBar Subtitle Properties of Radio Button Clickable property of any Layout COMPLETLY REDESIGNED MAKEROID UI Makeroid wants to be unique, so our amazing designer @Vishwas implemented the official Material Design into Makeroid Builder Now it is much clean and simple: Added a SearchBox in Palette Moved properties to hidden panel , so if you want to show them just click on the name of a Component Added categories to properties for a better sorting And, yeah, you are right. All SneakPeeks were \u201cfake\u201d We\u2019ve used the old design in the SneakPeeks because we didn\u2019t want to leak anything releated with it Redesigned Building Project dialog Added Hide Dialog button Non-Visible components names are now visible below Mock-Phone Increased SplashScreen height Added country flags next to their respective languages on Language Selector Fixed Dark Theme","title":"UI Changes"},{"location":"other/release-notes/andromeda/#bugs-fixed","text":"Fixed Layouts issues Layouts were always clickable Extensions that were depending on Layouts weren\u2019t working properly Fixed TitleBar Tabs issue which made them to have the previous color when TitleBar Color was changed Fixed ListView NullPointerException on some devices Fixed Show/Hide Navigation Bar not working in some devices Fixed \u201creset\u201d Screen bug on Orientation Change Fixed Logout issue which was logging out from ALL Google Accounts Fixed Color for StatusBar and TitleBar issue Fixed TopBar buttons issue which was overriding the created tab Fixed blocks getting stacked on top of eachother Fixed Blockly Translations issue Fixed Custom Package Name Now this Tutorial is no longer required! Fixed Tablet-Mode bug causing strange behaiours on refreshing","title":"Bugs Fixed"},{"location":"other/release-notes/andromeda/#new-components","text":"Added new Bottom Sheet component to User Interface category Added new Circular Progress component to User Interface category Added new Linear Progress component to User Interface category Added new Snack Bar component to User Interface category Added new View Flipper component to User Interface category Added new Card View component to Layout category Added new ExoPlayer component to Media category Added new Maps components to new Maps category Thanks to MIT App Inventor Team Added new Dynamic Button component to new Dynamic category Added new Dynamic Label component to new Dynamic category Added new Dynamic TextBox component to new Dynamic category Added new Amazon Ads components to Monetization category Thanks to AppyBuilder Team Amazon Banner Amazon Interstitial Added new Facebook Ads components to Monetization category Facebook Banner Facebook Interstitial Added new Shell component to Experimental category Renamed Google Map to Google Maps Moved Surface View to Layout Category","title":"New Components"},{"location":"other/release-notes/andromeda/#app-features","text":"Side Menu This new feature allows you to create professional side menus from blocks. You will just need to design inside a Vertical Layout what you want, and then call it from blocks Download this APK for a demo, or read this tutorial to see how to create one Functions: SideMenu - Creates a Side Menu with the give Layout Side Menu Open - Opens the Side Menu Side Menu Close - Closes the Side Menu Properties: Is Side Menu Open - Returns true if the Side Menu is open Events: Side Menu Opened - Triggered when the Side Menu is opened Side Menu Closed - Triggered when the Side Menu is closed This feature is not fully compatible with the Companion and it can make it to crash Splash Screen Based from this suggestion , Makeroid has removed the black screen that appeard when app is loading Also, we have added some options for it if users wants to customize it more Splash Enabled : If selected, the app will remove the black screen Splash Image ( Available when Splash Enabled checked ): If set, the app will show this image instead of the black image New Functions: Add Menu Item with Icon : Adds an item to the menu but with an image New Properties: About Screen Background Color : Sets the background color of the About Screen Accent Color : Sets the Accent Color of the App Primary Color / Title Bar Color : Sets the Primary Color of the App, which is the Title Bar Color if not set Primary Color Dark / Status Bar Color : Sets the Primary Dark Color of the app, which is the Status Bar Color if not set Screen Orientation : Added Behind , Full Sensor , No Sensor , Reverse , Landscape , Reverse Portrait , Sensor Landscape and Sensor Portrait Theme : Sets the theme for the app between Default , Light Theme or Dark Theme","title":"App Features"},{"location":"other/release-notes/andromeda/#new-events","text":"Notifier component Custom Dialog Selection : triggered after selecting a Custom Dialog Web Viewer component Web View String Change : triggered after the WebViewerString changes File component After Zip : triggered after successful Zip After Unzip : triggered after successful Unzip On Zip Failure : triggered when an error occurrs in Zip or Unzip","title":"New Events"},{"location":"other/release-notes/andromeda/#new-functions","text":"Button component Set Shadow : sets a shadow for the Button Thanks to AppyBuilder Team Checkbox component Set Shadow : sets a shadow for the Checkbox Thanks to AppyBuilder Team Image component Clear Image Tint Color : cleans the Tint Color set for the Image Notifier component Create Custom Dialog : creates a Custom Dialog from the given component (removes it from the Screen and places in the Custom Dialog ) Show Custom Dialog : shows a Custom Dialog Textbox component Set Shadow : sets a shadow for the Textbox Thanks to AppyBuilder Team Canvas component DrawArc : generates an Arc with the given params DrawShape : generates a Shape with the given points from a list File component Zip : zips a given folder in the given path, with an optional password Unzip : unzips a given file in the given folder, with an optioanl password if set Device Tools component Copy : copies the given text to the clipboard Parse : parsers the given string with _between a start and an end Paste : pastes the copied text Web component URI Decode : decodes the given URI Encoded text WiFi component Mac Address : returns the MAC Address of the device","title":"New Functions"},{"location":"other/release-notes/andromeda/#new-properties","text":"Button component Rotation Angle Image component Clickable Image Tint Color Customizable from Blocks ListPicker component Title Visible Notifier component Dim Amount Use Background Color Slider component Rotation Angle TextBox component Rotation Angle Layout components Clickable Use Round Card OCR component Language EmailPicker component Cursor Color Line Color FusionTables component Loading Dialog Message Show Loading Dialog TinyDB component Namespace Screenshot component Dim Amount Notification Share Button are Permissions Granted Available at Blocks is Read Permission Granted Available at Blocks is Write Permission Granted Available at Blocks Download component Requires Charging Customizable from Blocks Requires Device Idle Customizable from Blocks","title":"New Properties"},{"location":"other/release-notes/andromeda/#101-andromeda-124-23-june-2018","text":"","title":"1.0.1 Andromeda   |   23 June 2018"},{"location":"other/release-notes/andromeda/#bugs-fixed_1","text":"Fixed: Download app scannign QR Code ( missing GPlay update, probably tomorrow it will be live) Fixed: \u201cCreate\u201d block from \u201cFAB\u201d was crashing companion if there was no image added Fixed: ListViews Fixed: Random crashes using some components","title":"Bugs Fixed"},{"location":"other/release-notes/andromeda/#102-andromeda-124-28-june-2018","text":"","title":"1.0.2 Andromeda   |   28 June 2018"},{"location":"other/release-notes/andromeda/#new-blocks","text":"Added RemoveSideMenu block to Screen","title":"New Blocks"},{"location":"other/release-notes/andromeda/#bugs-fixed_2","text":"Temporarily removed Import/Export screen feature Removed \u201cwait for milliseconds\u201d block Fixed: Server error that sometimes happened when copying screens Fixed: Copied screens couldn\u2019t be opened Fixed: Errors with extensions Fixed: Some issues with Leadbolt component Fixed: Sizing issues with CardView component Fixed: TitleBar Subtitle not updating on the companion when subtitle removed Fixed: Some issues with ListViewImageText","title":"Bugs Fixed"},{"location":"other/release-notes/andromeda/#103-andromeda-124-19-july-2018","text":"","title":"1.0.3 Andromeda   |   19 July 2018"},{"location":"other/release-notes/andromeda/#ui-changes_1","text":"Added \u201c Import Project \u201d button on Projects Panel Added \u201c Loading Project \u201d dialog Imported Turkish Translation to Blockly Fixed some Descriptions for some components which had a larger font Made ScrollBar of Palette thicker","title":"UI Changes"},{"location":"other/release-notes/andromeda/#companion_1","text":"Added missing \u201c:\u201d to IP Address Label","title":"Companion"},{"location":"other/release-notes/andromeda/#new-features","text":"Added \u201cShow Ad\u201d block for Facebook Interstitial Ad component CloudDB component now handles images","title":"New Features"},{"location":"other/release-notes/andromeda/#bugs-fixed_3","text":"NullPointer Exception on some Alerts NullPointer Exception on GetUserId of PushNotifications Button Size wasn\u2019t affected if Shape was set Facebook Interstitial Ad should be working now","title":"Bugs Fixed"},{"location":"other/release-notes/andromeda/#104-andromeda-124-28-july-2018","text":"","title":"1.0.4 Andromeda   |   28 July 2018"},{"location":"other/release-notes/andromeda/#ui-changes_2","text":"Fixed \" Loading Project \" dialog shown even when project loaded Fixed \" Blockly Panel \" as it was overlapping with Components Scrollbar Increased Scrollbar Width on Components panel Added confirmation dialog when removing Screen Added confirmation dialog when removing Project Redesigned how \" Component Help \" is shown","title":"UI Changes"},{"location":"other/release-notes/andromeda/#improvements","text":"Improved \" Search Component \" speed Minimized CSS files to improve load time Improved Blocks Editor performance","title":"Improvements"},{"location":"other/release-notes/andromeda/#bugs-fixed_4","text":"Facebook Ads were not declared on Manifest Sharing Component was not working Removed some unused libraries (APKs should be a little bit lighter now)","title":"Bugs Fixed"},{"location":"other/release-notes/andromeda/#105-andromeda-124-14-august-2018","text":"","title":"1.0.5 Andromeda   |   14 August 2018"},{"location":"other/release-notes/andromeda/#ui-changes_3","text":"Brought back AppInventor Color Picker Added clickable links to \" Learn more at \" in components info","title":"UI Changes"},{"location":"other/release-notes/andromeda/#improvements_1","text":"Improved Loading Project time Added warning when using Builder over HTTPS Removed some unused libraries from APKs Integrated Fabric into Makeroid Apps Now we will get detailed crash info thanks to Crashlitics, which will help us to fix bugs You can check the bugs that are being tracked in this repository","title":"Improvements"},{"location":"other/release-notes/andromeda/#bugs-fixed_5","text":"Fixed AdMob Rewarded Video ( Sometimes ad weren't showing ) Fixed Assets Manager ( Internal Error appeard sometimes ) Fixed OCR Component ( NoPeer Certificate when making request ) Fixed AdMob Consent ( Title was shown instead of Message ) Fixed Search Components ( Search was performed using Component Class instead of Component Name )","title":"Bugs Fixed"},{"location":"other/release-notes/butterfly/","text":"Butterfly 1.1 Butterfly | 19 August 2018 Major Changes Improved Dialog of Fingerprint Component Now About Screen ( and all dialogs ) can have clickable links The \"major changes\" of this update are the bunch of new components Companion Added a Welcome Guide using the new Spotlight Component Little bugs fixed on Companion behaviour UI Changes Dialogs can now be Accepted pressing the Enter key Added Download Link when Exporting APK using QR Code Bugs Fixed User Interface Textbox: Background color was not working properly ListView: TextView.java line 8448 \u00b7 Issue #89 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Notifier: Notifier - bug \u00b7 Issue #37 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Layout Surface View: Little bug which was freezing the screen Media Audio Picker: Not working on some devices Image Picker: Minor Try/Catch Bug OCR: API Error (component was not working since some changes on the server) Drawing and Animation Canvas: Canvas bug \u00b7 Issue #78 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Sensors Sound Sensor: PrimProcedure.java line 285 \u00b7 Issue #26 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Storage Firebase: FirebaseDB.java line 509 \u00b7 Issue #79 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Connectivity Download: Download.java line 317 \u00b7 Issue #40 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Network: Network component \u00b7 Issue #114 \u00b7 Makeroid/BugsTracker \u00b7 GitHub New Components Added new Floating Action Button component to User interface category This is a complete new component Projects using the old FAB won't be broken. However, if you want to use this new FAB, you will need to delete the old one and use the new one Added new Spotlight component to User interface category Added new Tab Layout component to User interface category Now the Tabs blocks of Screen are Deprecated Added new View Pager component to User interface category Added new SideMenu Layout component to Layout category This component is an alternative way to generate a SideMenu You should use it if you want a simple way to create a SideMenu. However, if you want a complex and designed from scratch SideMenu, you can still use the old block Added new SwipeRefresh Layout component to Layout category Added new YouTube Player component to Media category Added new Animation Utilities component Drawing and Animation category Added new Cloudinary component to Storage category Added new Spreadsheet component to Storage category Powered by Airtable Thanks to @Jerin_Jacob Added new Arduino component to Connectivity category Added new FTP component to Connectivity category Added new WhiteMobi component to Monetization category Added new Chrome Custom Tabs component to Experimental category Added new Shortcut Badge component to Experimental category New Events Notifier component Linear Progress Dismissed : triggered when the Linear Progress is dismissed by the user Switch component Clicked : added is Checked variable Exoplayer component Other Player Started : triggered when another player starts playing sound Other Player Stopped : triggered when another player stops playing sound New Functions Screen Lock Side Menu : blocks the SideMenu from being opened or closed Unlock Side Menu : unblocks the SideMenu Button component With Icon : adds an icon to the Button Notifier component Dismiss Custom Dialog : dismisses the created Custom Dialog Switch component Thumb Image : changes the Image of the Switch Sound Recorder component Pause : pauses the started recording Requires Minimum SDK 24 Audio component Sound Effects Enabled : enables or disables the sound on a component Is Sound Effects Enabled : returns true if the sound of a component is enabled Package component Is Package Installed : returns true if the package is installed New Properties Screen Min SDK ( added SDK 28 - Android 9 ) Title Bar Font Typeface Title Bar Typeface Import Textbox component Enable Copy Paste Snackbar component Background Color Textbox component Cursor Visible","title":"Butterfly"},{"location":"other/release-notes/butterfly/#butterfly","text":"","title":"Butterfly"},{"location":"other/release-notes/butterfly/#11-butterfly-124-19-august-2018","text":"","title":"1.1 Butterfly   |   19 August 2018"},{"location":"other/release-notes/butterfly/#major-changes","text":"Improved Dialog of Fingerprint Component Now About Screen ( and all dialogs ) can have clickable links The \"major changes\" of this update are the bunch of new components","title":"Major Changes"},{"location":"other/release-notes/butterfly/#companion","text":"Added a Welcome Guide using the new Spotlight Component Little bugs fixed on Companion behaviour","title":"Companion"},{"location":"other/release-notes/butterfly/#ui-changes","text":"Dialogs can now be Accepted pressing the Enter key Added Download Link when Exporting APK using QR Code","title":"UI Changes"},{"location":"other/release-notes/butterfly/#bugs-fixed","text":"User Interface Textbox: Background color was not working properly ListView: TextView.java line 8448 \u00b7 Issue #89 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Notifier: Notifier - bug \u00b7 Issue #37 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Layout Surface View: Little bug which was freezing the screen Media Audio Picker: Not working on some devices Image Picker: Minor Try/Catch Bug OCR: API Error (component was not working since some changes on the server) Drawing and Animation Canvas: Canvas bug \u00b7 Issue #78 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Sensors Sound Sensor: PrimProcedure.java line 285 \u00b7 Issue #26 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Storage Firebase: FirebaseDB.java line 509 \u00b7 Issue #79 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Connectivity Download: Download.java line 317 \u00b7 Issue #40 \u00b7 Makeroid/BugsTracker \u00b7 GitHub Network: Network component \u00b7 Issue #114 \u00b7 Makeroid/BugsTracker \u00b7 GitHub","title":"Bugs Fixed"},{"location":"other/release-notes/butterfly/#new-components","text":"Added new Floating Action Button component to User interface category This is a complete new component Projects using the old FAB won't be broken. However, if you want to use this new FAB, you will need to delete the old one and use the new one Added new Spotlight component to User interface category Added new Tab Layout component to User interface category Now the Tabs blocks of Screen are Deprecated Added new View Pager component to User interface category Added new SideMenu Layout component to Layout category This component is an alternative way to generate a SideMenu You should use it if you want a simple way to create a SideMenu. However, if you want a complex and designed from scratch SideMenu, you can still use the old block Added new SwipeRefresh Layout component to Layout category Added new YouTube Player component to Media category Added new Animation Utilities component Drawing and Animation category Added new Cloudinary component to Storage category Added new Spreadsheet component to Storage category Powered by Airtable Thanks to @Jerin_Jacob Added new Arduino component to Connectivity category Added new FTP component to Connectivity category Added new WhiteMobi component to Monetization category Added new Chrome Custom Tabs component to Experimental category Added new Shortcut Badge component to Experimental category","title":"New Components"},{"location":"other/release-notes/butterfly/#new-events","text":"Notifier component Linear Progress Dismissed : triggered when the Linear Progress is dismissed by the user Switch component Clicked : added is Checked variable Exoplayer component Other Player Started : triggered when another player starts playing sound Other Player Stopped : triggered when another player stops playing sound","title":"New Events"},{"location":"other/release-notes/butterfly/#new-functions","text":"Screen Lock Side Menu : blocks the SideMenu from being opened or closed Unlock Side Menu : unblocks the SideMenu Button component With Icon : adds an icon to the Button Notifier component Dismiss Custom Dialog : dismisses the created Custom Dialog Switch component Thumb Image : changes the Image of the Switch Sound Recorder component Pause : pauses the started recording Requires Minimum SDK 24 Audio component Sound Effects Enabled : enables or disables the sound on a component Is Sound Effects Enabled : returns true if the sound of a component is enabled Package component Is Package Installed : returns true if the package is installed","title":"New Functions"},{"location":"other/release-notes/butterfly/#new-properties","text":"Screen Min SDK ( added SDK 28 - Android 9 ) Title Bar Font Typeface Title Bar Typeface Import Textbox component Enable Copy Paste Snackbar component Background Color Textbox component Cursor Visible","title":"New Properties"},{"location":"other/resources/","text":"Makeroid Resources Concept Cards","title":"Overview"},{"location":"other/resources/#makeroid-resources","text":"","title":"Makeroid Resources"},{"location":"other/resources/#concept-cards","text":"","title":"Concept Cards"},{"location":"other/resources/concept-cards/","text":"Concept Cards Quote Big thanks to @Peter who made these amazing cards!","title":"Concept Cards"},{"location":"other/resources/concept-cards/#concept-cards","text":"Quote Big thanks to @Peter who made these amazing cards!","title":"Concept Cards"}]}