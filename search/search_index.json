{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Need some help with the components? Just looking around? Either way, the following docs will surely help you understand Makeroid better! For further help, please visit the Makeroid Community . Getting Started With the Documentation Start by Choosing a Category Main Categories Components User Interface Layout Media Drawing and Animation Sensors Social Storage Connectivity Google LEGO Mindstorms Monetization Device Experimental Blocks Control Logic Math Text Lists Colors Variables Procedures Screen Any Component Testing Live Development Other Extensions Create Extensions Release Notes Backpack Donate Makeroid Makeroid allows you to create Android apps easily with a blocks-type editor. No coding skills required. With the Material Design UI, your apps will stand out. We always listen to our users' opinions from our community (your suggestions, bug reports etc.). Useful Links Makeroid Builder This is the page you're going to use to build apps. This is main app that allows you to create anything you want with a Material Design UI. Makeroid Community Using the community, you can get help related to your questions about Makeroid. Even submit your ideas to help improve Makeroid or even report bugs you've experienced during your app development session. Community has so many users that help you, this means you will get a proper answer to any question of yours in minutes. Makeroid Status Page Using the Status Page you can check which services' of Makeroid is working or in Maintenance. If you cannot use a service of Makeroid, you can check using this page if the problem is related to your local internet or the Makeroid Server. A Quick Start on Makeroid","title":"Getting Started"},{"location":"#introduction","text":"Need some help with the components? Just looking around? Either way, the following docs will surely help you understand Makeroid better! For further help, please visit the Makeroid Community .","title":"Introduction"},{"location":"#getting-started-with-the-documentation","text":"","title":"Getting Started With the Documentation"},{"location":"#start-by-choosing-a-category","text":"","title":"Start by Choosing a Category"},{"location":"#main-categories","text":"Components User Interface Layout Media Drawing and Animation Sensors Social Storage Connectivity Google LEGO Mindstorms Monetization Device Experimental Blocks Control Logic Math Text Lists Colors Variables Procedures Screen Any Component","title":"Main Categories"},{"location":"#testing","text":"Live Development","title":"Testing"},{"location":"#other","text":"Extensions Create Extensions Release Notes Backpack Donate","title":"Other"},{"location":"#makeroid","text":"Makeroid allows you to create Android apps easily with a blocks-type editor. No coding skills required. With the Material Design UI, your apps will stand out. We always listen to our users' opinions from our community (your suggestions, bug reports etc.).","title":"Makeroid"},{"location":"#useful-links","text":"","title":"Useful Links"},{"location":"#makeroid-builder","text":"This is the page you're going to use to build apps. This is main app that allows you to create anything you want with a Material Design UI.","title":"Makeroid Builder"},{"location":"#makeroid-community","text":"Using the community, you can get help related to your questions about Makeroid. Even submit your ideas to help improve Makeroid or even report bugs you've experienced during your app development session. Community has so many users that help you, this means you will get a proper answer to any question of yours in minutes.","title":"Makeroid Community"},{"location":"#makeroid-status-page","text":"Using the Status Page you can check which services' of Makeroid is working or in Maintenance. If you cannot use a service of Makeroid, you can check using this page if the problem is related to your local internet or the Makeroid Server.","title":"Makeroid Status Page"},{"location":"#a-quick-start-on-makeroid","text":"","title":"A Quick Start on Makeroid"},{"location":"components/","text":"Overview of components Components are the basic building blocks of your app. The behaviour and look are of your apps are customised with components. Component categories For easier access of components, they are grouped into various categories. Data Types The properties of a component and parameters of a method or event may be of one of the following types: Asset Color Number Text Asset An Asset type property can be set from the Designer by selecting an Asset from the uploaded assets for the app. From the Blocks Editor, it can be set using a Text block containing the path to that Asset. Color A Color found under the Color category. Number A Designer property of this type can be set by filling a number in the textbox From the blocks editor, the Number block can be found under the Math category. Text A Text is simply a string. It can have alphanumeric characters. For some properties and parameters, certain pre-determined Text are only allowed, which would be documented with them.","title":"Overview"},{"location":"components/#overview-of-components","text":"Components are the basic building blocks of your app. The behaviour and look are of your apps are customised with components.","title":"Overview  of components "},{"location":"components/#component-categories","text":"For easier access of components, they are grouped into various categories.","title":"Component categories"},{"location":"components/#data-types","text":"The properties of a component and parameters of a method or event may be of one of the following types: Asset Color Number Text","title":"Data Types"},{"location":"components/#asset","text":"An Asset type property can be set from the Designer by selecting an Asset from the uploaded assets for the app. From the Blocks Editor, it can be set using a Text block containing the path to that Asset.","title":"Asset"},{"location":"components/#color","text":"A Color found under the Color category.","title":"Color"},{"location":"components/#number","text":"A Designer property of this type can be set by filling a number in the textbox From the blocks editor, the Number block can be found under the Math category.","title":"Number"},{"location":"components/#text","text":"A Text is simply a string. It can have alphanumeric characters. For some properties and parameters, certain pre-determined Text are only allowed, which would be documented with them.","title":"Text"},{"location":"components/user-interface/button/","text":"Button Overview A button is a basic UI element with which the user can interact with your apps by tapping or clicking on it to perform an action. A typical button Properties Background Color ( Getter + Setter ) Type: Color The background color with which the text of the Button is shown. If the Image property is set, then this is overriden. Enabled ( Getter + Setter ) Type: Boolean Determines whether the Button is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The Button is enabled and will execute Events when they occur. false The Button is disabled and will not execute Events when they occur. Font Bold ( Getter + Setter ) Type: Boolean Determines whether the text of the Button is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style. Font Italic ( Getter + Setter ) Type: Boolean Determines whether the text of Button is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style. Font Size ( Getter + Setter ) Type: Number The font size with which the text of the Button is displayed. Font Typeface ( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font Font Typeface Import ( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks. Height ( Getter + Setter ) Type: Number The height with which the Button is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the Button is displayed in terms of precentage of the whole screen height. Image ( Getter + Setter ) Type: Asset The image that is displayed on the button as a background. This property overrides the Background Color property. Rotation Angle ( Getter + Setter ) Type: Number The degrees that the Button is rotated around the pivot point. Increasing values result in clockwise rotation. Shape ( Setter only )( Designer Only ) Type: Text The shape of the Button . Options Default The default shape of the button i.e a standard button. Rectangular The button is in rectangular shape , similar to Default shape. Rounded The corners of the button are rounded giving it a shape like rounded rectangle. Oval The Button is in the shape of an oval. Text ( Getter + Setter ) Type: Text The text displayed for the Button . Text Color ( Getter + Setter ) Type: Color The color of the Text displayed for the Button . Width ( Getter + Setter ) Type: Number The width with which the Button is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Button is displayed in terms of precentage of the whole screen width. Visible ( Getter + Setter ) Type: Boolean Determines whether the Button is visible on the screen and shown to the user or not. Options true The Button is shown to the user. false The Button is not shown to the user. Methods Button Click ( None ) Perform a Button click. The Click event is also fired when this method is executed. Events Click ( None ) Indicates that the user has clicked the button (i.e pressed and released) Got Focus ( None ) Indicates the has been cursor moved over the button so it is now possible to click it. Long Click ( None ) Indicates that the user has clicked and held down the button. Click event is not fired when the Button is long clicked. Lost Focus ( None ) Indicates the cursor moved away from the button so it is now no longer possible to click it.","title":"Button"},{"location":"components/user-interface/button/#button","text":"","title":"Button"},{"location":"components/user-interface/button/#overview","text":"A button is a basic UI element with which the user can interact with your apps by tapping or clicking on it to perform an action. A typical button","title":"Overview"},{"location":"components/user-interface/button/#properties","text":"","title":"Properties"},{"location":"components/user-interface/button/#background-color","text":"( Getter + Setter ) Type: Color The background color with which the text of the Button is shown. If the Image property is set, then this is overriden.","title":"Background Color"},{"location":"components/user-interface/button/#enabled","text":"( Getter + Setter ) Type: Boolean Determines whether the Button is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The Button is enabled and will execute Events when they occur. false The Button is disabled and will not execute Events when they occur.","title":"Enabled"},{"location":"components/user-interface/button/#font-bold","text":"( Getter + Setter ) Type: Boolean Determines whether the text of the Button is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font Bold"},{"location":"components/user-interface/button/#font-italic","text":"( Getter + Setter ) Type: Boolean Determines whether the text of Button is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font Italic"},{"location":"components/user-interface/button/#font-size","text":"( Getter + Setter ) Type: Number The font size with which the text of the Button is displayed.","title":"Font  Size"},{"location":"components/user-interface/button/#font-typeface","text":"( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font","title":"Font Typeface"},{"location":"components/user-interface/button/#font-typeface-import","text":"( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font Typeface Import"},{"location":"components/user-interface/button/#height","text":"( Getter + Setter ) Type: Number The height with which the Button is displayed.","title":"Height"},{"location":"components/user-interface/button/#heightpercent","text":"( Setter Only ) Type: Number The height with which the Button is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"components/user-interface/button/#image","text":"( Getter + Setter ) Type: Asset The image that is displayed on the button as a background. This property overrides the Background Color property.","title":"Image"},{"location":"components/user-interface/button/#rotation-angle","text":"( Getter + Setter ) Type: Number The degrees that the Button is rotated around the pivot point. Increasing values result in clockwise rotation.","title":"Rotation Angle"},{"location":"components/user-interface/button/#shape","text":"( Setter only )( Designer Only ) Type: Text The shape of the Button . Options Default The default shape of the button i.e a standard button. Rectangular The button is in rectangular shape , similar to Default shape. Rounded The corners of the button are rounded giving it a shape like rounded rectangle. Oval The Button is in the shape of an oval.","title":"Shape"},{"location":"components/user-interface/button/#text","text":"( Getter + Setter ) Type: Text The text displayed for the Button .","title":"Text"},{"location":"components/user-interface/button/#text-color","text":"( Getter + Setter ) Type: Color The color of the Text displayed for the Button .","title":"Text Color"},{"location":"components/user-interface/button/#width","text":"( Getter + Setter ) Type: Number The width with which the Button is displayed.","title":"Width"},{"location":"components/user-interface/button/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Button is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/button/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Button is visible on the screen and shown to the user or not. Options true The Button is shown to the user. false The Button is not shown to the user.","title":"Visible"},{"location":"components/user-interface/button/#methods","text":"","title":"Methods"},{"location":"components/user-interface/button/#button-click","text":"( None ) Perform a Button click. The Click event is also fired when this method is executed.","title":"Button Click"},{"location":"components/user-interface/button/#events","text":"","title":"Events"},{"location":"components/user-interface/button/#click","text":"( None ) Indicates that the user has clicked the button (i.e pressed and released)","title":"Click"},{"location":"components/user-interface/button/#got-focus","text":"( None ) Indicates the has been cursor moved over the button so it is now possible to click it.","title":"Got Focus"},{"location":"components/user-interface/button/#long-click","text":"( None ) Indicates that the user has clicked and held down the button. Click event is not fired when the Button is long clicked.","title":"Long Click"},{"location":"components/user-interface/button/#lost-focus","text":"( None ) Indicates the cursor moved away from the button so it is now no longer possible to click it.","title":"Lost Focus"},{"location":"components/user-interface/checkbox/","text":"Checkbox A checkbox is a GUI widget that allows the user to make a binary choice, i.e. a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' (checked) or 'no' (not checked) on a simple yes/no question. Often, a series of checkboxes are presented, each representing different options. Then the user may select several of the choices. The difference between a Radio button and a checkbox is that a checkbox allows the user to select multiple options from a set, while a Radio Button allows the user to select only one option from a set. Properties Background Color ( Getter + Setter ) Type: Color The background color with which the text of the Checkbox is shown. Checkbox Color ( Getter + Setter ) Type: Color The color of the checkbox displayed. This determines only the color of the checkbox and not its text. See Text Color for the color of the text. Checked ( Getter + Setter ) Type: Boolean Determines whether the Checkbox is checked or not. true if checked, false otherwise. Height ( Getter + Setter ) Type: Number The height with which the Checkbox is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the Checkbox is displayed in terms of precentage of the whole screen height. Text ( Getter + Setter ) Type: Text The text displayed for the Checkbox . Text Color ( Getter + Setter ) Type: Color The color of the Text displayed for the Checkbox . Visible ( Getter + Setter ) Type: Boolean Determines whether the Checkbox is visible on the screen and shown to the user or not. Options true The Checkbox is shown to the user. false The Checkbox is not shown to the user. Width ( Getter + Setter ) Type: Number The width with which the Checkbox is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Checkbox is displayed in terms of precentage of the whole screen width. Events Changed ( None ) Indicates that the user has checked or unchecked the Checkbox . Use the Getter block of Checked property inside this Event's block to know the current status. Got Focus ( None ) Indicates the has been cursor moved over the Checkbox so it is now possible to click it. Lost Focus ( None ) Indicates the cursor moved away from the Checkbox so it is now no longer possible to click it.","title":"Checkbox"},{"location":"components/user-interface/checkbox/#checkbox","text":"A checkbox is a GUI widget that allows the user to make a binary choice, i.e. a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' (checked) or 'no' (not checked) on a simple yes/no question. Often, a series of checkboxes are presented, each representing different options. Then the user may select several of the choices. The difference between a Radio button and a checkbox is that a checkbox allows the user to select multiple options from a set, while a Radio Button allows the user to select only one option from a set.","title":"Checkbox"},{"location":"components/user-interface/checkbox/#properties","text":"","title":"Properties"},{"location":"components/user-interface/checkbox/#background-color","text":"( Getter + Setter ) Type: Color The background color with which the text of the Checkbox is shown.","title":"Background Color"},{"location":"components/user-interface/checkbox/#checkbox-color","text":"( Getter + Setter ) Type: Color The color of the checkbox displayed. This determines only the color of the checkbox and not its text. See Text Color for the color of the text.","title":"Checkbox Color"},{"location":"components/user-interface/checkbox/#checked","text":"( Getter + Setter ) Type: Boolean Determines whether the Checkbox is checked or not. true if checked, false otherwise.","title":"Checked"},{"location":"components/user-interface/checkbox/#height","text":"( Getter + Setter ) Type: Number The height with which the Checkbox is displayed.","title":"Height"},{"location":"components/user-interface/checkbox/#heightpercent","text":"( Setter Only ) Type: Number The height with which the Checkbox is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"components/user-interface/checkbox/#text","text":"( Getter + Setter ) Type: Text The text displayed for the Checkbox .","title":"Text"},{"location":"components/user-interface/checkbox/#text-color","text":"( Getter + Setter ) Type: Color The color of the Text displayed for the Checkbox .","title":"Text Color"},{"location":"components/user-interface/checkbox/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Checkbox is visible on the screen and shown to the user or not. Options true The Checkbox is shown to the user. false The Checkbox is not shown to the user.","title":"Visible"},{"location":"components/user-interface/checkbox/#width","text":"( Getter + Setter ) Type: Number The width with which the Checkbox is displayed.","title":"Width"},{"location":"components/user-interface/checkbox/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Checkbox is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/checkbox/#events","text":"","title":"Events"},{"location":"components/user-interface/checkbox/#changed","text":"( None ) Indicates that the user has checked or unchecked the Checkbox . Use the Getter block of Checked property inside this Event's block to know the current status.","title":"Changed"},{"location":"components/user-interface/checkbox/#got-focus","text":"( None ) Indicates the has been cursor moved over the Checkbox so it is now possible to click it.","title":"Got Focus"},{"location":"components/user-interface/checkbox/#lost-focus","text":"( None ) Indicates the cursor moved away from the Checkbox so it is now no longer possible to click it.","title":"Lost Focus"},{"location":"components/user-interface/circular-progress/","text":"Circular Progress Overview Circular Progress displays progress by animating an indicator along an invisible circular track in a clockwise direction. The Circular Progress grows and shrinks in size while moving along the invisible track. An example of a Circular Progress . Properties Color ( Getter + Setter ) Type: Color The color with which the moving Circular Progess is displayed. Height ( Getter + Setter ) Type: Number The height with which the Circular Progress is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the Circular Progress is displayed in terms of precentage of the whole screen height. Visible ( Getter + Setter ) Type: Boolean Determines whether the Circular Progress is visible on the screen and shown to the user or not. Options true The Circular Progress is shown to the user. false The Circular Progress is not shown to the user. Width ( Getter + Setter ) Type: Number The width with which the Circular Progress is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Circular Progress is displayed in terms of precentage of the whole screen width.","title":"Circular Progress"},{"location":"components/user-interface/circular-progress/#circular-progress","text":"","title":"Circular Progress"},{"location":"components/user-interface/circular-progress/#overview","text":"Circular Progress displays progress by animating an indicator along an invisible circular track in a clockwise direction. The Circular Progress grows and shrinks in size while moving along the invisible track. An example of a Circular Progress .","title":"Overview"},{"location":"components/user-interface/circular-progress/#properties","text":"","title":"Properties"},{"location":"components/user-interface/circular-progress/#color","text":"( Getter + Setter ) Type: Color The color with which the moving Circular Progess is displayed.","title":"Color"},{"location":"components/user-interface/circular-progress/#height","text":"( Getter + Setter ) Type: Number The height with which the Circular Progress is displayed.","title":"Height"},{"location":"components/user-interface/circular-progress/#heightpercent","text":"( Setter Only ) Type: Number The height with which the Circular Progress is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"components/user-interface/circular-progress/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Circular Progress is visible on the screen and shown to the user or not. Options true The Circular Progress is shown to the user. false The Circular Progress is not shown to the user.","title":"Visible"},{"location":"components/user-interface/circular-progress/#width","text":"( Getter + Setter ) Type: Number The width with which the Circular Progress is displayed.","title":"Width"},{"location":"components/user-interface/circular-progress/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Circular Progress is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/linear-progressbar/","text":"Linear Progressbar Overview A Progressbar is used to visually indicate the user the progress of some task, such as a download, data transfer etc. A determinate progress bar is used to indicate the progress of an task whose exact value of progress is known for eg. the percentage of a file download, number of files transferred. A indeterminate progress bar is used in situations where the extent of the task is unknown or the progress of the task cannot be determined in a way that could be expressed as a percentage, for example, when a request to a server is being processed where we don't know the exact value of progress, but there is a need to indicate to the user that the task is in progress. A determinate progressbar fills from 0% to 100%. An indeterminate progress bar moves in a fixed path, growing and shrinking in size. Tip Use progressbars in a non-interupptive manner. Properties Indeterminate ( Getter + Setter ) Type: Boolean Determines whether the progress bar is to be displayed in the indeterminate mode. (See Overview for the difference between determinate and indeterminate modes.) Options true The progressbar is in indeterminate mode. false The progressbar is in determinate mode. Indeterminate Color ( Getter + Setter ) Type: Color The color in which the indeterminate progress bar is displayed, if the Indeterminate property is set to true . Has no effect on the apperance of the determinate progress bar. Maximum ( Getter + Setter ) Type: Number The upper range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 100 Minimum ( Getter + Setter ) Type: Number The lower range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 0 Note This property can be set only on devices using Android Oreo or newer versions. Setting this method has no effect on devices using older versions of Android. Progress ( Getter + Setter ) Type: Number The current progress value of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) When using Getter , returns 0 if Indeterminate is set to true Width ( Getter + Setter ) Type: Number The width with which the Linear Progressbar is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the Linear Progressbar is displayed in terms of precentage of the whole screen width. Visible ( Getter + Setter ) Type: Boolean Determines whether the Linear Progressbar is visible on the screen and shown to the user or not. Options true The Linear Progressbar is shown to the user. false The Linear Progressbar is not shown to the user. Methods Increment Progress By ( Number value ) Increases the value progress by the given value. Params value Number: The amount by which progress should be increased. Events Progress Changed ( Number progress ) Indicates that the value of the progress bar has changed. Params progress Number: The current value of the progressbar.This is 0 if the progressbar is in indeterminate mode.","title":"Linear Progressbar"},{"location":"components/user-interface/linear-progressbar/#linear-progressbar","text":"","title":"Linear Progressbar"},{"location":"components/user-interface/linear-progressbar/#overview","text":"A Progressbar is used to visually indicate the user the progress of some task, such as a download, data transfer etc. A determinate progress bar is used to indicate the progress of an task whose exact value of progress is known for eg. the percentage of a file download, number of files transferred. A indeterminate progress bar is used in situations where the extent of the task is unknown or the progress of the task cannot be determined in a way that could be expressed as a percentage, for example, when a request to a server is being processed where we don't know the exact value of progress, but there is a need to indicate to the user that the task is in progress. A determinate progressbar fills from 0% to 100%. An indeterminate progress bar moves in a fixed path, growing and shrinking in size. Tip Use progressbars in a non-interupptive manner.","title":"Overview"},{"location":"components/user-interface/linear-progressbar/#properties","text":"","title":"Properties"},{"location":"components/user-interface/linear-progressbar/#indeterminate","text":"( Getter + Setter ) Type: Boolean Determines whether the progress bar is to be displayed in the indeterminate mode. (See Overview for the difference between determinate and indeterminate modes.) Options true The progressbar is in indeterminate mode. false The progressbar is in determinate mode.","title":"Indeterminate"},{"location":"components/user-interface/linear-progressbar/#indeterminate-color","text":"( Getter + Setter ) Type: Color The color in which the indeterminate progress bar is displayed, if the Indeterminate property is set to true . Has no effect on the apperance of the determinate progress bar.","title":"Indeterminate Color"},{"location":"components/user-interface/linear-progressbar/#maximum","text":"( Getter + Setter ) Type: Number The upper range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 100","title":"Maximum"},{"location":"components/user-interface/linear-progressbar/#minimum","text":"( Getter + Setter ) Type: Number The lower range of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) The default value is 0 Note This property can be set only on devices using Android Oreo or newer versions. Setting this method has no effect on devices using older versions of Android.","title":"Minimum"},{"location":"components/user-interface/linear-progressbar/#progress","text":"( Getter + Setter ) Type: Number The current progress value of the progress bar in determinate mode(i.e when the Indeterminate property is set to false .) When using Getter , returns 0 if Indeterminate is set to true","title":"Progress"},{"location":"components/user-interface/linear-progressbar/#width","text":"( Getter + Setter ) Type: Number The width with which the Linear Progressbar is displayed.","title":"Width"},{"location":"components/user-interface/linear-progressbar/#widthpercent","text":"( Setter Only ) Type: Number The width with which the Linear Progressbar is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"},{"location":"components/user-interface/linear-progressbar/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the Linear Progressbar is visible on the screen and shown to the user or not. Options true The Linear Progressbar is shown to the user. false The Linear Progressbar is not shown to the user.","title":"Visible"},{"location":"components/user-interface/linear-progressbar/#methods","text":"","title":"Methods"},{"location":"components/user-interface/linear-progressbar/#increment-progress-by","text":"( Number value ) Increases the value progress by the given value. Params value Number: The amount by which progress should be increased.","title":"Increment Progress By"},{"location":"components/user-interface/linear-progressbar/#events","text":"","title":"Events"},{"location":"components/user-interface/linear-progressbar/#progress-changed","text":"( Number progress ) Indicates that the value of the progress bar has changed. Params progress Number: The current value of the progressbar.This is 0 if the progressbar is in indeterminate mode.","title":"Progress Changed"},{"location":"includes/all-font-properties/","text":"Font Bold ( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style. Font Italic ( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style. Font Size ( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed. Font Typeface ( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font Font Typeface Import ( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"All font properties"},{"location":"includes/all-font-properties/#font-bold","text":"( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font Bold"},{"location":"includes/all-font-properties/#font-italic","text":"( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font Italic"},{"location":"includes/all-font-properties/#font-size","text":"( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed.","title":"Font  Size"},{"location":"includes/all-font-properties/#font-typeface","text":"( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font","title":"Font Typeface"},{"location":"includes/all-font-properties/#font-typeface-import","text":"( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font Typeface Import"},{"location":"includes/bgcolor-property/","text":"Background Color ( Getter + Setter ) Type: Color The background color with which the text of the {{ meta.component }} is shown.","title":"Bgcolor property"},{"location":"includes/bgcolor-property/#background-color","text":"( Getter + Setter ) Type: Color The background color with which the text of the {{ meta.component }} is shown.","title":"Background Color"},{"location":"includes/enabled-property/","text":"Enabled ( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The {{ meta.component }} is enabled and will execute Events when they occur. false The {{ meta.component }} is disabled and will not execute Events when they occur.","title":"Enabled property"},{"location":"includes/enabled-property/#enabled","text":"( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is enabled or not. A disabled component does not execute any of the Events . It does not respond to any interactions with it by the user. Options true The {{ meta.component }} is enabled and will execute Events when they occur. false The {{ meta.component }} is disabled and will not execute Events when they occur.","title":"Enabled"},{"location":"includes/font-bold-property/","text":"Font Bold ( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font bold property"},{"location":"includes/font-bold-property/#font-bold","text":"( Getter + Setter ) Type: Boolean Determines whether the text of the {{ meta.component }} is displayed in Bold or not. Options true The text is displayed with bold style. false The text is displayed without bold style.","title":"Font Bold"},{"location":"includes/font-italic-property/","text":"Font Italic ( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font italic property"},{"location":"includes/font-italic-property/#font-italic","text":"( Getter + Setter ) Type: Boolean Determines whether the text of {{ meta.component }} is displayed in Italics. Options true The text is displayed with Italics style. false The text is displayed without Italics style.","title":"Font Italic"},{"location":"includes/font-size-property/","text":"Font Size ( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed.","title":"Font size property"},{"location":"includes/font-size-property/#font-size","text":"( Getter + Setter ) Type: Number The font size with which the text of the {{ meta.component }} is displayed.","title":"Font  Size"},{"location":"includes/font-typeface-import-property/","text":"Font Typeface Import ( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font typeface import property"},{"location":"includes/font-typeface-import-property/#font-typeface-import","text":"( Setter only ) Type: Asset The custom font family that can be set for the of the text displayed. To use a custom font, other than the ones from Font Typeface , upload the font file (.ttf file) as an asset to the project, and then select it in the Designer. This can also be set with Blocks.","title":"Font Typeface Import"},{"location":"includes/font-typeface-property/","text":"Font Typeface ( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font.","title":"Font typeface property"},{"location":"includes/font-typeface-property/#font-typeface","text":"( Setter only ) ( Designer Only ) Type: Text The font family of the text displayed. Options Default The default font of an Android device. Sans Serif The default Sans Serif font of an Android device. Serif The default Serif font of an Android device. Monospace The default Monospace font of an Android device. Roboto thin The thin style of Roboto font family. Roboto regular The regular style of Roboto font family. FontAwesome The Font Awesome icon font of version 4.7.0 . Use the unicode of the icon from the cheatsheet as the text to display the corresponding icon. For example, setting the text as #xf1a0; will display the Google logo. Material Icons The Material Icon font from Google. Use the unicode of the icon that can be viewed by selecting an icon here . For example, setting the text as #xE876; will display a single tick mark. Default fonts in Android devices The default font in an Android device is usually Roboto in most of the devices although some devices(like Samsung) have an option to customise this font.","title":"Font Typeface"},{"location":"includes/height-property/","text":"Height ( Getter + Setter ) Type: Number The height with which the {{ meta.component }} is displayed. HeightPercent ( Setter Only ) Type: Number The height with which the {{ meta.component }} is displayed in terms of precentage of the whole screen height.","title":"Height property"},{"location":"includes/height-property/#height","text":"( Getter + Setter ) Type: Number The height with which the {{ meta.component }} is displayed.","title":"Height"},{"location":"includes/height-property/#heightpercent","text":"( Setter Only ) Type: Number The height with which the {{ meta.component }} is displayed in terms of precentage of the whole screen height.","title":"HeightPercent"},{"location":"includes/text-property/","text":"Text ( Getter + Setter ) Type: Text The text displayed for the {{ meta.component }} . Text Color ( Getter + Setter ) Type: Color The color of the Text displayed for the {{ meta.component }} .","title":"Text property"},{"location":"includes/text-property/#text","text":"( Getter + Setter ) Type: Text The text displayed for the {{ meta.component }} .","title":"Text"},{"location":"includes/text-property/#text-color","text":"( Getter + Setter ) Type: Color The color of the Text displayed for the {{ meta.component }} .","title":"Text Color"},{"location":"includes/visible-property/","text":"Visible ( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is visible on the screen and shown to the user or not. Options true The {{ meta.component }} is shown to the user. false The {{ meta.component }} is not shown to the user.","title":"Visible property"},{"location":"includes/visible-property/#visible","text":"( Getter + Setter ) Type: Boolean Determines whether the {{ meta.component }} is visible on the screen and shown to the user or not. Options true The {{ meta.component }} is shown to the user. false The {{ meta.component }} is not shown to the user.","title":"Visible"},{"location":"includes/width-property/","text":"Width ( Getter + Setter ) Type: Number The width with which the {{ meta.component }} is displayed. WidthPercent ( Setter Only ) Type: Number The width with which the {{ meta.component }} is displayed in terms of precentage of the whole screen width.","title":"Width property"},{"location":"includes/width-property/#width","text":"( Getter + Setter ) Type: Number The width with which the {{ meta.component }} is displayed.","title":"Width"},{"location":"includes/width-property/#widthpercent","text":"( Setter Only ) Type: Number The width with which the {{ meta.component }} is displayed in terms of precentage of the whole screen width.","title":"WidthPercent"}]}